variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

jobs:
  - job: frontend
    displayName: Build frontend

    pool:
      vmImage: ubuntu-20.04

    steps:
      - task: NodeTool@0
        displayName: Install Node
        inputs:
          versionSpec: '18.7'

      - script: corepack enable

      - script: yarn lint-ci
        displayName: Lint code

      # - script: yarn stylelint
      #   displayName: Lint styles

      - script: yarn typecheck
        displayName: Check types

      - script: yarn test-ci
        displayName: Run tests

      - task: PublishTestResults@2
        displayName: Publish test results
        continueOnError: true
        inputs:
          testResultsFiles: junit.xml

      - task: PublishCodeCoverageResults@1
        displayName: Publish test coverage
        continueOnError: true
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: coverage/cobertura-coverage.xml

      - script: yarn build
        displayName: Build app bundles

      - task: CopyFiles@2
        displayName: Copy build output to staging directory
        inputs:
          contents: wwwroot/**/*
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: Publish build artifacts
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)
          artifact: frontend

  - job: backend
    displayName: Build backend

    pool:
      vmImage: windows-2022

    steps:
      - task: DotNetCoreCLI@2
        displayName: Package artifacts
        inputs:
          command: publish
          publishWebProjects: true
          arguments: --configuration Release --output $(Build.ArtifactStagingDirectory)
          zipAfterPublish: false

      - task: PublishPipelineArtifact@1
        displayName: Publish build artifacts
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)
          artifact: backend
