jobs:
- job: frontend
  displayName: Build frontend

  pool:
    vmImage: ubuntu-latest

  steps:
    - task: UseNode@1
      displayName: Install Node 12 LTS
      inputs:
        version: 12.x

    - script: yarn install --frozen-lockfile
      displayName: Install dependencies

    - script: yarn eslint-ci
      displayName: Lint TypeScript code

    - script: yarn stylelint
      displayName: Lint SCSS code

    - script: yarn typecheck
      displayName: Check types

    - script: yarn test-ci
      displayName: Run tests

    - task: PublishTestResults@2
      displayName: Publish test results
      continueOnError: true
      inputs:
        testResultsFiles: junit.xml

    - task: PublishCodeCoverageResults@1
      displayName: Publish test coverage
      continueOnError: true
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: coverage/cobertura-coverage.xml

    - script: yarn build
      displayName: Build app bundles

    - task: CopyFiles@2
      displayName: Copy build output to staging directory
      inputs:
        contents: wwwroot/**/*
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishPipelineArtifact@1
      displayName: Publish build artifacts
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifact: frontend

- job: backend
  displayName: Build backend

  pool:
    vmImage: windows-latest

  steps:
    - task: UseDotNet@2
      displayName: Install .NET Core 3.0 SDK
      inputs:
        version: 3.0.x
        performMultiLevelLookup: true

    - task: DotNetCoreCLI@2
      displayName: Package artifacts
      inputs:
        command: publish
        publishWebProjects: true
        arguments: --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
        zipAfterPublish: false

    - task: PublishPipelineArtifact@1
      displayName: Publish build artifacts
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifact: backend


