/// <reference types="node" />
import { DriftctlExecutionResult, DriftCTLOptions } from '../types';
import { StdioOptions } from 'child_process';
export declare const DCTL_EXIT_CODES: {
    EXIT_IN_SYNC: number;
    EXIT_NOT_IN_SYNC: number;
    EXIT_ERROR: number;
};
export declare const driftctlVersion = "v0.35.2";
export declare const generateArgs: (options: DriftCTLOptions, driftIgnore?: string[] | undefined) => Promise<string[]>;
export declare function translateExitCode(exitCode: number | null): number;
export declare const runDriftCTL: ({ options, driftIgnore, input, stdio, }: {
    options: DriftCTLOptions;
    driftIgnore?: string[] | undefined;
    input?: string | undefined;
    stdio?: "pipe" | "ignore" | "inherit" | (number | import("stream").Stream | "pipe" | "ignore" | "inherit" | "ipc" | null | undefined)[] | undefined;
}) => Promise<DriftctlExecutionResult>;
